name: PK
on:
  push:
    branches:
      - main  # Exécute le workflow sur les push dans la branche "main"
  pull_request:
    branches:
      - main  # Exécute le workflow sur les pull requests vers "main"

jobs:
  setup-and-test:
    name: Setup Environment and Run Tests
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Vérification du code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configuration de Miniconda
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          auto-update-conda: true
          activate-environment: base
          use-only-tar-bz2: true

      # Étape 3 : Installation des dépendances manquantes
      - name: Install dependencies
        run: |
          conda activate base
          pip install pytest pytest-cov black

      # Étape 4 : Formater le code avec Black
      - name: Run Black code formatter
        run: |
          conda activate base
          black .  # Formate tout le code dans le répertoire courant

      # Étape 5 : Exécution des tests avec couverture
      - name: Run tests with coverage
        run: |
          conda activate base
          pytest --cov=src tests/ --cov-report=xml

      # Étape 6 : Upload du rapport de couverture
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true

  build-docs:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    needs: setup-and-test

    steps:
      # Étape 1 : Vérification du code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configuration de Miniconda
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          auto-update-conda: true
          activate-environment: base
          use-only-tar-bz2: true

      # Étape 3 : Installation des dépendances pour la documentation
      - name: Install dependencies for docs
        run: |
          conda activate base
          pip install sphinx sphinx-rtd-theme

      # Étape 4 : Génération de la documentation avec Sphinx
      - name: Build Sphinx documentation
        run: |
          conda activate base
          sphinx-build -b html doc/source doc/_build/html

      # Étape 5 : Déploiement sur GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages  # Branche pour GitHub Pages
          folder: doc/_build/html  # Dossier contenant la documentation générée
